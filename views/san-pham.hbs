<div class="navbar navbar-inverse set-radius-zero">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      {{!-- <a class="navbar-brand" href="/sanpham">
        <img src="/img/logoPS.jpg" />
      </a> --}}
    </div>

    <div class="right-div">
      <a href="/dangxuat" class="btn btn-info pull-right">LOG ME OUT</a>
    </div>
  </div>
</div>
<!-- LOGO HEADER END-->
<section class="menu-section">
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <div class="navbar-collapse collapse">
          <ul id="menu-top" class="nav navbar-nav navbar-right">
            {{! <li><a href="/">LOGIN</a></li> }}

            <li>
              <a href="/sanpham">Sản Phẩm</a>
            </li>
            {{! <li>
              <a href="/sanpham/4/edit">Sửa Sản Phẩm</a>
            </li> }}
            <li>
              <a href="/danhmuc">Danh Mục</a>
            </li>
            {{! <li>
              <a href="/danhmuc/4/edit">Sửa Danh Mục</a>
            </li> }}
            <li><a href="/thongke">Thống Kê</a></li>

          </ul>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- MENU SECTION END-->
<div class="content-wrapper">
  <div class="container">
    <div class="row pad-botm">
      <button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
        Thêm Sản Phẩm
      </button>

      <div>
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
          aria-hidden="true" style="display: none">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                  ×
                </button>
                <h4 class="modal-title" id="myModalLabel">
                  Modal Thêm Sản Phẩm
                </h4>
              </div>
              <div class="panel-body">
                <form role="form" method="post" action="/sanpham">
                  {{!-- <div class="form-group">
                    <label>ID</label>
                    <input class="form-control" type="text" />

                  </div> --}}
                  <div class="form-group">
                    <label>Name</label>
                    <input onchange="validationForm()" id="name" class="form-control" type="text" name='name'
                      value="" />

                  </div>
                  <div class="form-group">
                    <label>Price</label>
                    <input onchange="validationForm()" id="price" class="form-control" type="text" name="price"
                      value="" />

                  </div>
                  <div class="form-group">
                    <label>Quantity</label>
                    <input onchange="validationForm()" id="quantity" class="form-control" type="text" name="quantity"
                      value="" />

                  </div>
                  <div class="form-group">
                    <label class="control-lable" for="error">Category</label>
                    <select class="form-control" name="category" id="category">
                      {{#each categories}}
                      <option value="{{this._id}}">{{this.name}}</option>
                      {{/each}}
                    </select>
                  </div>

                  <div class="form-group">
                    {{!-- <label class="control-lable" for="error">Image</label>
                    <hr> --}}
                    <img id="img-view" class="display-none img-cover" width="100" height="100" src="" />
                    <input type="hidden" onchange="validationForm()" value="" name="image" id="image" />
                    <input type="file" class="form-control-file border" id='img-file' onchange="onChangeFile()" />
                  </div>

                  <div class="form-group">
                    <label class="control-lable" for="description">Description</label>
                    <textarea type="text" rows="4" class="form-control" id="description" name="description">

                    </textarea>


                  </div>
                  <div class="form-group checkbox">
                    <label class="control-lable" for="available">
                      <input type="checkbox" id="available" name="available" value=""></input>
                      Available
                    </label>
                  </div>

                  <div class="form-group">
                    <label class="control-lable" for="published">Published</label>
                    <input type="date" onchange="validationForm()" class="form-control" id="published" name="published"
                      value=""></input>

                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                      Close
                    </button>
                    <button id="btnSave" onclick="onSave()" type="button" disabled class="btn btn-primary">
                      Save changes
                    </button>
                    <h4 id="error-msg"></h4>
                </form>
              </div>

            </div>
          </div>
        </div>
      </div>
    </div>
  </div>


  <!-- Modal delete -->
  <div class="modal fade" id="myModalDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true" style="display: none">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
            ×
          </button>
          <h4 class="modal-title" id="myModalLabel">
            Bạn có chắc muốn xóa sản phẩm này!
          </h4>
        </div>

        <div class="modal-footer">

          <button type="button" class="btn btn-default" data-dismiss="modal">
            Close
          </button>
          <button type="submit" class="btn btn-primary" onclick="onDelete()">
            OK
          </button>
        </div>

      </div>
    </div>
  </div>

  <!-- End modal delete -->

  <!-- /. ROW  -->

  <!-- /. ROW  -->

  <!-- /. ROW  -->

  <!--    Hover Rows  -->

  <div class="panel panel-default">
    <div class="panel-heading">Bảng Sản Phẩm</div>
    <div class="panel-body">
      <div class="table-responsive">
        <table class="table table-hover">
          <thead>
            <tr>
              <th>STT</th>
              <th>ID</th>
              <th>NAME</th>
              <th>PRICE</th>
              <th>QUANTITY</th>
              <th>CATEGORY</th>
              <th>IMAGE</th>
              <th>DESCRIPTION</th>
              <th>AVILABLE</th>
              <th>PUBLISHED</th>
              <th>ACTION</th>
            </tr>
          </thead>
          <tbody>
            {{#each products}}
            <tr>
              <td>{{soThuTu @index}}</td>
              <td>{{this._id}}</td>
              <td>{{this.name}}</td>
              <td>{{this.price}}</td>
              <td>{{this.quantity}}</td>
              <td>{{getCategoryName this.category ../categories}}</td>
              <td>
                <img src=" {{this.image}}" width="80" height="70" />
              </td>
              <td>{{this.description}}</td>
              <td>{{this.available}}</td>
              <td>{{formatDate this.published 1}}</td>

              <td>
                {{!-- <a href="/sanpham/{{this.id}}/edit"> --}}
                  <button class="btn btn-primary" onclick="goEdit('{{this._id}}')">
                    <i class="fa fa-edit"></i>
                    Edit
                  </button>
                  {{! </a> }}

                <button class="btn btn-danger" data-toggle="modal" data-target="#myModalDelete"
                  onclick="goDelete('{{this._id}}')">
                  <i class="fa fa-pencil"></i>
                  Delete
                </button>
              </td>
            </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
</div>
<!-- CONTENT-WRAPPER SECTION END-->
<section class="footer-section">
  <div class="container">
    <div class="row">
      {{!-- <div class="col-md-12">
        &copy; 2014 Yourdomain.com |<a href="http://www.binarytheme.com/" target="_blank">
          Designed by : binarytheme.com</a>
      </div> --}}
    </div>
  </div>
</section>

<script>
  let delete_id;
  const goEdit = (id) => { window.location.href = `/sanpham/${id}/edit` }
  const goDelete = (id) => {
    delete_id = id;
  }
  const fetchAPI = async (url, option) => {
    const res = await fetch(url, option);
    return res.json().then();
  }
  const onDelete = async () => {
    const url = `https://demo-nodejs-fpt.herokuapp.com/sanpham/${delete_id}`;
    const option = {
      method: 'delete',
      headers: { "Content-Type": "application/json" }
    }
    try {
      await fetchAPI(url, option);
      window.location.href = "/sanpham";
    } catch (e) {
      console.log("Delete Error: ", e);
    }
  }
  const firebaseConfig = {
    apiKey: "AIzaSyBNwWFKrZ_aHS-O2Q8OtjoEaCxbOIz3wr8",
    authDomain: "myprojectreactnative-faff7.firebaseapp.com",
    projectId: "myprojectreactnative-faff7",
    storageBucket: "myprojectreactnative-faff7.appspot.com",
    messagingSenderId: "562033096838",
    appId: "1:562033096838:web:f0236981882d1b610f7907"
  };
  firebase.initializeApp(firebaseConfig);
  const onChangeFile = () => {
    const file = document.getElementById('img-file').files[0];
    const reader = new FileReader();
    reader.onload = e => {
      document.getElementById('img-view').src = e.target.result;
      document.getElementById('img-view').classList.remove('display-none')
    }
    reader.readAsDataURL(file);

    // upload
    const ref = firebase.storage().ref(uuid());
    const uploadTask = ref.put(file);
    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,
      (snapshot) => { },
      (error) => { console.log("firebase error", error) },
      () => {
        uploadTask.snapshot.ref.getDownloadURL().then(url => {

          document.getElementById("image").value = url;

        })
      }
    );

  }
  const uuid = () => {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
      return v.toString(16);
    });
  }

  const validationForm = () => {
    const name = document.getElementById("name").value;
    const price = document.getElementById("price").value;
    const image = document.getElementById("image").value;
    const published = document.getElementById("published").value;
    const quantity = document.getElementById("quantity").value;

    if (!name || !price || !image || !published || !quantity
      || name.trim().lenght === 0
      || price.trim().lenght === 0
      || price < 0
      || price > 1000000000000
      || quantity.trim().lenght === 0
      || new Date(published).getTime() > new Date().getTime()) {
      document.getElementById("btnSave").disabled = true;
    } else {
      document.getElementById("btnSave").disabled = false;
    }
  }
  const onSave = async () => {
    const name = document.getElementById("name").value;
    const price = document.getElementById("price").value;
    const image = document.getElementById("image").value;
    const published = document.getElementById("published").value;
    const quantity = document.getElementById("quantity").value;
    const category = document.getElementById("category").value;
    const available = document.getElementById("available").value;
    const description = document.getElementById("description").value;
    const body = {
      name, price, image, published, quantity, description, available, category
    }
    const url = "https://demo-nodejs-fpt.herokuapp.com/sanpham";

    const option = {
      method: 'post',
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(body)
    }
    try {
      const result = await fetchAPI(url, option);
      if (result.status) {
        window.location.href = "/sanpham";
      } else {
        console.log("result.status false")
        if (result.errors) {
          const msg = result.errors[0].msg;
          document.getElementById("error-msg").innerText = msg;
        }
        else {
          console.log("is not error ");
        }
      }

    } catch (e) {
      console.log("Delete Error: ", e);
    }
  }
</script>